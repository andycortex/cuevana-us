/**
 * Represents information about an actor run, as returned by the
 * {@link Apifycall } or {@link ApifycallTask } function.
 * The object is almost equivalent to the JSON response
 * of the
 * [Actor run](https://apify.com/docs/api/v2#/reference/actors/run-collection/run-actor)
 * Apify API endpoint and extended with certain fields.
 * For more details, see
 * [Runs.](https://docs.apify.com/actor/run)
 */
export type ActorRun = {
    /**
     *   Actor run ID
     */
    id: string;
    /**
     *   Actor ID
     */
    actId: string;
    /**
     *   Time when the actor run started
     */
    startedAt: Date;
    /**
     *   Time when the actor run finished. Contains `null` for running actors.
     */
    finishedAt: Date;
    /**
     *   Status of the run. For possible values, see
     *   [Run lifecycle](https://docs.apify.com/actors/running#lifecycle)
     *   in Apify actor documentation.
     */
    status: string;
    /**
     *   Actor run meta-data. For example:
     *   ```
     *   {
     *     "origin": "API",
     *     "clientIp": "1.2.3.4",
     *     "userAgent": "ApifyClient/0.2.13 (Linux; Node/v8.11.3)"
     *   }
     *   ```
     */
    meta: {
        [x: string]: string;
    };
    /**
     *   An object containing various actor run statistics. For example:
     *   ```
     *   {
     *     "inputBodyLen": 22,
     *     "restartCount": 0,
     *     "workersUsed": 1,
     *   }
     *   ```
     *   Beware that object fields might change in future releases.
     */
    stats: {
        [x: string]: number;
    };
    /**
     *   Actor run options. For example:
     *   ```
     *   {
     *     "build": "latest",
     *     "waitSecs": 0,
     *     "memoryMbytes": 256,
     *     "diskMbytes": 512
     *   }
     *   ```
     */
    options: {
        [x: string]: any;
    };
    /**
     *   ID of the actor build used for the run. For details, see
     *   [Builds](https://docs.apify.com/actor/build)
     *   in Apify actor documentation.
     */
    buildId: string;
    /**
     *   Number of the actor build used for the run. For example, `0.0.10`.
     */
    buildNumber: string;
    /**
     *   Exit code of the actor run process. It's `null` if actor is still running.
     */
    exitCode: number;
    /**
     *   ID of the default key-value store associated with the actor run. See {@link KeyValueStore } for details.
     */
    defaultKeyValueStoreId: string;
    /**
     *   ID of the default dataset associated with the actor run. See {@link Dataset } for details.
     */
    defaultDatasetId: string;
    /**
     *   ID of the default request queue associated with the actor run. See {@link RequestQueue } for details.
     */
    defaultRequestQueueId: string;
    /**
     *   URL on which the web server running inside actor run's Docker container can be accessed.
     *   For more details, see
     *   [Container web server](https://docs.apify.com/actor/run#container-web-server)
     *   in Apify actor documentation.
     */
    containerUrl: string;
    /**
     *   Contains output of the actor run. The value is `null` or `undefined` in case the actor is still running,
     *   or if you pass `false` to the `fetchOutput` option of {@link Apifycall }.
     *
     *   For example:
     *   ```
     *   {
     *     "contentType": "application/json; charset=utf-8",
     *     "body": {
     *       "message": "Hello world!"
     *     }
     *   }
     *   ```
     */
    output: ({
        [x: string]: any;
    } | null | undefined);
};
export type DirectNavigationOptions = {
    /**
     * Maximum operation time in milliseconds, defaults to 30 seconds, pass `0` to disable timeout. The
     * default value can be changed by using the browserContext.setDefaultNavigationTimeout(timeout),
     * browserContext.setDefaultTimeout(timeout), page.setDefaultNavigationTimeout(timeout) or
     * page.setDefaultTimeout(timeout) methods.
     */
    timeout?: number | undefined;
    /**
     * When to consider operation succeeded, defaults to `load`. Events can be either:
     * - `'domcontentloaded'` - consider operation to be finished when the `DOMContentLoaded` event is fired.
     * - `'load'` - consider operation to be finished when the `load` event is fired.
     * - `'networkidle'` - consider operation to be finished when there are no network connections for at least `500` ms.
     */
    waitUntil?: "domcontentloaded" | "load" | "networkidle" | undefined;
    /**
     * Referer header value. If provided it will take preference over the referer header value set by page.setExtraHTTPHeaders(headers).
     */
    referer?: string | undefined;
};
//# sourceMappingURL=typedefs.d.ts.map